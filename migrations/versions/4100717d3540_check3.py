from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4100717d3540'
down_revision = '9ff8c530d0ca'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('love',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('slug1', sa.String(length=100), nullable=False))
        batch_op.create_unique_constraint("uq_user_slug1", ['slug1'])  # Fixed name issue

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint("uq_user_slug1", type_='unique')  # Fixed name issue
        batch_op.drop_column('slug1')

    op.drop_table('love')
    # ### end Alembic commands ###
